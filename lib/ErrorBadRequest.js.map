{"version":3,"sources":["../source/ErrorBadRequest.js"],"names":["ErrorBadRequest","message","name","statusCode","statusText","Error","captureStackTrace","stack"],"mappings":"iwBAAA;;;;;;MAOqBA,CAAAA,e,iFACnB;;;;;;KAOA,0BAA4B,cAAhBC,CAAAA,OAAgB,2DAAN,IAAM,uDAC1B,iHAAMA,OAAN,GACA,MAAKC,IAAL,CAAY,aAAZ,CACA,MAAKC,UAAL,CAAkB,GAAlB,CACA,MAAKC,UAAL,CAAkB,aAAlB,CACA,MAAKH,OAAL,CAAeA,OAAf,CACA,GAAII,KAAK,CAACC,iBAAV,CAA6B,CAC3BD,KAAK,CAACC,iBAAN,+CAA8BN,eAA9B,CACD,CAFD,IAEO,CACL,MAAKO,KAAL,CAAa,GAAIF,CAAAA,KAAJ,GAAYE,KAC1B,CAVyB,YAW3B,C,yDAnB0CF,K","sourcesContent":["/**\n * Custom error message for Bad Request server response\n *\n * @namespace ErrorBadRequest\n * @class\n * @param {string | null} [message = null] - error details\n */\nexport default class ErrorBadRequest extends Error {\n  /**\n   * Constructor generates errorinstance\n   * @memberof ErrorBadRequest\n   * @constructor\n   * @param {string | null} [message = null] - error details\n   * @return {ErrorBadRequest} - current instance\n   */\n  constructor(message = null) {\n    super(message);\n    this.name = 'Bad Request';\n    this.statusCode = 400;\n    this.statusText = 'Bad Request';\n    this.message = message;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorBadRequest);\n    } else {\n      this.stack = new Error().stack;\n    }\n  }\n}\n"],"file":"ErrorBadRequest.js"}