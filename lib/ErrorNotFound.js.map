{"version":3,"sources":["../source/ErrorNotFound.js"],"names":["ErrorNotFound","message","name","statusCode","statusText","Error","captureStackTrace","stack"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;IAOqBA,a;;;;;AACnB;;;;;;;AAOA,2BAA4B;AAAA;;AAAA,QAAhBC,OAAgB,uEAAN,IAAM;AAAA;AAC1B,yHAAMA,OAAN;AACA,UAAKC,IAAL,GAAY,WAAZ;AACA,UAAKC,UAAL,GAAkB,GAAlB;AACA,UAAKC,UAAL,GAAkB,WAAlB;AACA,UAAKH,OAAL,GAAeA,OAAf;;AACA,QAAII,KAAK,CAACC,iBAAV,EAA6B;AAC3BD,MAAAA,KAAK,CAACC,iBAAN,iDAA8BN,aAA9B;AACD,KAFD,MAEO;AACL,YAAKO,KAAL,GAAa,IAAIF,KAAJ,GAAYE,KAAzB;AACD;;AAVyB;AAW3B;;;oCAnBwCF,K","sourcesContent":["/**\n * Custom error message for Not Found server response\n *\n * @namespace ErrorNotFound\n * @class\n * @param {string | null} [message = null] - error details\n */\nexport default class ErrorNotFound extends Error {\n  /**\n   * Constructor generates error instance\n   * @memberof ErrorNotFound\n   * @constructor\n   * @param {string | null} [message = null] - error details\n   * @return {ErrorNotFound} - current instance\n   */\n  constructor(message = null) {\n    super(message);\n    this.name = \"Not Found\";\n    this.statusCode = 404;\n    this.statusText = \"Not Found\";\n    this.message = message;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorNotFound);\n    } else {\n      this.stack = new Error().stack;\n    }\n  }\n}\n"],"file":"ErrorNotFound.js"}